/*
Given an n-ary tree, return the postorder traversal of its nodes' values.

Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).
*/
var postorder = function(root) {
    let result = [];
    function postOrder(node){
        if(!node){
            return;
        }
        for(let child of node.children){
            postOrder(child);
        }
        
        result.push(node.val);
    }
    postOrder(root);
    return result;
};
============================================================================================
//iterative
var postorder = function(root) {
    if(!root){
        return [];
    }
    let stack = [root];
    let result = [];
    while(stack.length !==0){
        let node = stack.pop();
      
        if(node.children !== null){
            for(let child of node.children){
                stack.push(child);
            }
        }
        result.unshift(node.val);
        
    }
    return result
};
