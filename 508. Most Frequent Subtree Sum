/*
Given the root of a tree, you are asked to find the most frequent subtree sum. 
The subtree sum of a node is defined as the sum of all the node values formed by 
the subtree rooted at that node (including the node itself). So what is the most
frequent subtree sum value? If there is a tie, return all the values with the highest frequency in any order.
*/
var findFrequentTreeSum = function(root) {
    let map = new Map();
    function postOrder(node){
        if(!node){
            return 0;
        }
        let value = postOrder(node.left) + postOrder(node.right)+node.val;
        if(!map.has(value)){
            map.set(value,[1])
        }else{
            map.get(value)[0]++;
        }
        return value;
    }
    postOrder(root);
    let result = [];
    let max = 0;
    for(let entry of map.entries()){
        max = Math.max(entry[1][0],max)
    }

    for(let entry of map.entries()){
        if(entry[1][0]===max){
            result.push(entry[0]);
        }
    }
    return result;
};
