/*
A binary tree is named Even-Odd if it meets the following conditions:

The root of the binary tree is at level index 0, its children are at level index 1, their children are at level index 2, etc.
For every even-indexed level, all nodes at the level have odd integer values in strictly increasing order (from left to right).
For every odd-indexed level, all nodes at the level have even integer values in strictly decreasing order (from left to right).
Given the root of a binary tree, return true if the binary tree is Even-Odd, otherwise return false.
*/
var isEvenOddTree = function(root) {
    let result = [];
    let ans = true;
    function levelOrder(node,level){
        if(!node){
            return;
        }
        if(level%2===0 &&result[level]===undefined){
            result[level] = -Infinity;
        }
        if(level%2===1 &&result[level]===undefined){
            result[level] = Infinity;
        }
        if(level%2===0){
            if(node.val>result[level] && node.val%2===1){
                result[level]=node.val;
            }else{
                ans = false;
            }
        }
        if(level%2===1){
            if(node.val<result[level] && node.val%2===0){
                result[level]=node.val;
            }else{
                ans = false;
            }
        }
        levelOrder(node.left,level+1);
        levelOrder(node.right,level+1);
    }
    levelOrder(root,0);
    return ans;
};
