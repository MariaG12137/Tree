/*
Given a non-empty special binary tree consisting of nodes with the non-negative value, 
where each node in this tree has exactly two or zero sub-node. If the node has two
sub-nodes, then this node's value is the smaller value among its two sub-nodes. 
More formally, the property root.val = min(root.left.val, root.right.val) always holds.
*/
var findSecondMinimumValue = function(root) {
    let min = Infinity;
    let Tarnode = null;
    let val = root.val;
    
    function traverse(node){
        if(!node){
            return;
        }
        if(node.val-val>0 && node.val-val<min){
            min = node.val -val;
            Tarnode = node;
        }
        traverse(node.left);
        traverse(node.right);
    }
    traverse(root);
    return !Tarnode?-1:Tarnode.val;
};
